version: '3.9'

networks:
  dockerapi-dev:
    driver: bridge
    
services:
  rabbit:
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "rabbit", "5672" ]
      interval: 1s
      timeout: 3s
      retries: 30
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - dockerapi-dev
        
  postgres_image:
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - dockerapi-dev      
  
  pdf-service:
    image: pdf-service:latest
    depends_on:
      rabbit:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/Backend/PdfService/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
    networks:
      - dockerapi-dev 
        
  api-orchestrator:
    image: api-orchestrator:latest
    depends_on:
      rabbit:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/Backend/PdfConverter.ApiOrchestrator/Dockerfile
    ports:
      - "5001:80"
    environment:
      - RABBITMQ:User=${RABBITMQ_USER}
      - RABBITMQ:Pass=${RABBITMQ_PASS}
      - RABBITMQ:Host=${RABBITMQ_HOST}
      - RABBITMQ:VHost=${RABBITMQ_VHOST}
    networks:
      - dockerapi-dev       

  storage:
    image: storage:latest
    depends_on:
      rabbit:
        condition: service_healthy
      postgres_image:
        condition: service_started  
    build:
      context: .
      dockerfile: src/Backend/PdfConverter.Storage/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ConnectionStrings:DefaultConnection=Host=postgres_image;Database=Storage;Username=${DB_USER};Password=${DB_PASSWORD}
      - RABBITMQ:User=${RABBITMQ_USER}
      - RABBITMQ:Pass=${RABBITMQ_PASS}
      - RABBITMQ:Host=${RABBITMQ_HOST}
      - RABBITMQ:VHost=${RABBITMQ_VHOST}
    networks:
      - dockerapi-dev      
        
  notification-service:
    image: notification-service:latest
    depends_on:
      rabbit:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/Backend/PdfConverter.NotificationService/Dockerfile
    ports:
      - "5003:80"
    environment:
      - RABBITMQ:User=${RABBITMQ_USER}
      - RABBITMQ:Pass=${RABBITMQ_PASS}
      - RABBITMQ:Host=${RABBITMQ_HOST}
      - RABBITMQ:VHost=${RABBITMQ_VHOST}
    networks:
      - dockerapi-dev        